#!/bin/sh

# Allow users to run sh
if [ "$1" = "sh" ]; then
  exec /bin/sh
fi

export DB_DEBUG="no"

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help)
      cat <<"EOF"
Usage: mazelike [options]

  -h, --help     Show this message
  -v, --verbose  Print all database queries
  -d, --docker   Run the game server instances as separate containers
EOF
      exit
      ;;

    -v|--verbose)
      export DB_DEBUG="yes"
      ;;
    
    -d|--docker)
      export CLUSTER_MANAGER="docker"
      ;;
    
    *)
      echo "Unknown argument $1"
      ;;
  esac

  shift
done

# Set docker defaults
if [ -z "$CLUSTER_MANAGER" ]; then
  export CLUSTER_MANAGER="docker"
fi

if [ -z "$NODE_ENV" ]; then
  export NODE_ENV="production"
fi

if [ -z "$DB_HOST" ] &&  [ -z "$DB_STORAGE" ]; then
  export DB_STORAGE="/data/mazelike.sqlite"
fi

if [ -z "$PUBLIC_DIR" ]; then
  export PUBLIC_DIR="/data"
fi

cat <<"EOF"
___  ___                  _  _  _         
|  \/  |                 | |(_)| |        
| .  . |  __ _  ____ ___ | | _ | | __ ___ 
| |\/| | / _` ||_  // _ \| || || |/ // _ \
| |  | || (_| | / /|  __/| || ||   <|  __/
\_|  |_/ \__,_|/___|\___||_||_||_|\_\\___|

EOF

# Only run migrations when we are not running sqlite
if [ -z "$DB_STORAGE" ]; then
  ./node_modules/.bin/sequelize db:migrate

  if [ $? -ne 0 ]; then
    exit $?
  fi
fi

exec node --experimental-modules Backend/index.mjs